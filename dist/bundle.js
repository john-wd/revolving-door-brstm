/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/brstm/dist/brstm.js":
/*!******************************************!*\
  !*** ./node_modules/brstm/dist/brstm.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function t(t, a, e) {\n  for (var s = [], r = a; r < a + e; r++) {\n    s.push(t[r]);\n  }\n\n  return s;\n}\n\nfunction a(a, e, s) {\n  return t(a, e, s).reduce(function (t, a) {\n    return 256 * t + a;\n  }, 0);\n}\n\nfunction e(t, a, e) {\n  return t <= a ? a : t >= e ? e : t;\n}\n\nfunction s(t) {\n  return t >= 32768 ? t - 65536 : t;\n}\n\nexports.Brstm = function () {\n  function r(e) {\n    if (this.rawData = new Uint8Array(e), \"RSTM\" !== (s = t(this.rawData, 0, 4), String.fromCharCode.apply(String, s))) throw new Error(\"Not a valid BRSTM file\");\n    var s;\n    this._offsetToHead = a(this.rawData, 16, 4), this._offsetToHeadChunk1 = this._offsetToHead + a(this.rawData, this._offsetToHead + 12, 4) + 8, this._offsetToHeadChunk2 = this._offsetToHead + a(this.rawData, this._offsetToHead + 20, 4) + 8, this._offsetToHeadChunk3 = this._offsetToHead + a(this.rawData, this._offsetToHead + 28, 4) + 8, this._offsetToAdpc = a(this.rawData, 24, 4), this._offsetToData = a(this.rawData, 32, 4), this.metadata = this._getMetadata(), this._cachedSamples = null, this._partitionedAdpcChunkData = null, this._cachedChannelInfo = null, this._cachedBlockResults = [];\n  }\n\n  var o = r.prototype;\n  return o._getChannelInfo = function () {\n    if (this._cachedChannelInfo) return this._cachedChannelInfo;\n\n    for (var t = this.metadata.numberChannels, e = [], r = 0; r < t; r++) {\n      for (var o = this._offsetToHead + a(this.rawData, this._offsetToHeadChunk3 + 8 + 8 * r, 4) + 8 + 8, i = [], h = 0; h < 16; h++) {\n        var n = a(this.rawData, o + 2 * h, 2);\n        i.push(s(n));\n      }\n\n      e.push({\n        adpcmCoefficients: i,\n        gain: a(this.rawData, o + 40, 2),\n        initialPredictorScale: a(this.rawData, o + 42, 2),\n        historySample1: a(this.rawData, o + 44, 2),\n        historySample2: a(this.rawData, o + 46, 2),\n        loopPredictorScale: a(this.rawData, o + 48, 2),\n        loopHistorySample1: a(this.rawData, o + 50, 2),\n        loopHistorySample2: a(this.rawData, o + 52, 2)\n      });\n    }\n\n    return this._cachedChannelInfo = e, e;\n  }, o._getMetadata = function () {\n    var t = a(this.rawData, this._offsetToHeadChunk1 + 2, 1);\n    return {\n      fileSize: a(this.rawData, 8, 4),\n      codec: a(this.rawData, this._offsetToHeadChunk1, 1),\n      loopFlag: a(this.rawData, this._offsetToHeadChunk1 + 1, 1),\n      numberChannels: t,\n      sampleRate: a(this.rawData, this._offsetToHeadChunk1 + 4, 2),\n      loopStartSample: a(this.rawData, this._offsetToHeadChunk1 + 8, 4),\n      totalSamples: a(this.rawData, this._offsetToHeadChunk1 + 12, 4),\n      totalBlocks: a(this.rawData, this._offsetToHeadChunk1 + 20, 4),\n      blockSize: a(this.rawData, this._offsetToHeadChunk1 + 24, 4),\n      samplesPerBlock: a(this.rawData, this._offsetToHeadChunk1 + 28, 4),\n      finalBlockSize: a(this.rawData, this._offsetToHeadChunk1 + 32, 4),\n      finalBlockSizeWithPadding: a(this.rawData, this._offsetToHeadChunk1 + 40, 4),\n      totalSamplesInFinalBlock: a(this.rawData, this._offsetToHeadChunk1 + 36, 4),\n      adpcTableSamplesPerEntry: a(this.rawData, this._offsetToHeadChunk1 + 44, 4),\n      adpcTableBytesPerEntry: a(this.rawData, this._offsetToHeadChunk1 + 48, 4),\n      numberTracks: a(this.rawData, this._offsetToHeadChunk2, 1),\n      trackDescriptionType: a(this.rawData, this._offsetToHeadChunk2 + 1, 1)\n    };\n  }, o._getPartitionedBlockData = function (t) {\n    for (var a = this.metadata, e = a.blockSize, s = a.totalBlocks, r = a.numberChannels, o = a.finalBlockSize, i = a.finalBlockSizeWithPadding, h = [], n = 0; n < r; n++) {\n      h.push(new Uint8Array(t === s - 1 ? o : e));\n    }\n\n    for (var f = t, l = 0; l < r; l++) {\n      var c = 0 !== l && f + 1 === s ? f * r * e + l * i : (f * r + l) * e,\n          u = this.rawData.slice(this._offsetToData + 32 + c, this._offsetToData + 32 + (f + 1 === s ? c + o : c + e));\n      h[l].set(u);\n    }\n\n    return h;\n  }, o._getPartitionedAdpcChunkData = function () {\n    if (this._partitionedAdpcChunkData) return this._partitionedAdpcChunkData;\n\n    for (var t = this.metadata, e = t.totalBlocks, r = t.numberChannels, o = a(this.rawData, this._offsetToAdpc + 4, 4), i = this.rawData.slice(this._offsetToAdpc + 8, this._offsetToAdpc + 8 + o), h = 0, n = 0, f = 0, l = 0; l < r; l++) {\n      n = s(a(i, h, 2)), f = s(a(i, h += 2, 2)), h += 2;\n    }\n\n    for (var c = [], u = 0; u < e; u++) {\n      c.push([]);\n\n      for (var d = 0; d < r; d++) {\n        u > 0 && (n = s(a(i, h, 2)), f = s(a(i, h += 2, 2)), h += 2), c[u].push({\n          yn1: n,\n          yn2: f\n        });\n      }\n    }\n\n    for (var p = [], _ = function _(t) {\n      p.push(c.map(function (a) {\n        return a[t];\n      }));\n    }, k = 0; k < r; k++) {\n      _(k);\n    }\n\n    return this._partitionedAdpcChunkData = p, p;\n  }, o.getAllSamples = function () {\n    if (this._cachedSamples) return this._cachedSamples;\n\n    for (var t = this.metadata, a = t.numberChannels, e = t.totalSamples, s = t.totalBlocks, r = t.samplesPerBlock, o = [], i = 0; i < a; i++) {\n      o.push(new Int16Array(e));\n    }\n\n    for (var h = 0; h < s; h++) {\n      for (var n = this._getSamplesAtBlock(h), f = 0; f < a; f++) {\n        o[f].set(n[f], h * r);\n      }\n    }\n\n    return this._cachedSamples = o, o;\n  }, o._getSamplesAtBlock = function (t) {\n    if (this._cachedBlockResults[t]) return this._cachedBlockResults[t];\n\n    for (var r = this.metadata, o = r.numberChannels, i = r.totalBlocks, h = r.totalSamplesInFinalBlock, n = r.samplesPerBlock, f = r.codec, l = this._getChannelInfo(), c = this._getPartitionedBlockData(t), u = this._getPartitionedAdpcChunkData(), d = [], p = t === i - 1 ? h : n, _ = 0; _ < o; _++) {\n      d.push(new Int16Array(p));\n    }\n\n    for (var k = 0; k < o; k++) {\n      var m = l[k].adpcmCoefficients,\n          D = c[k],\n          w = [];\n\n      if (2 === f) {\n        for (var C = u[k][t], T = D[0], v = C.yn1, S = C.yn2, H = 0, B = 0; B < p;) {\n          var g = 0;\n          B % 14 == 0 && (T = D[H++]), (g = 0 == (1 & B++) ? D[H] >> 4 : 15 & D[H++]) >= 8 && (g -= 16);\n          var y = T >> 4 << 1;\n          g = 1024 + ((1 << (15 & T)) * g << 11) + m[e(y, 0, 15)] * v + m[e(y + 1, 0, 15)] * S >> 11, S = v, v = e(g, -32768, 32767), w.push(v);\n        }\n\n        t < i - 1 && (u[k][t + 1].yn1 = w[p - 1], u[k][t + 1].yn2 = w[p - 2]);\n      } else if (1 === f) for (var A = 0; A < p; A++) {\n        var P = s(a(D, 2 * A, 2));\n        w.push(P);\n      } else {\n        if (0 !== f) throw new Error(\"Invalid codec\");\n\n        for (var b = 0; b < p; b++) {\n          w.push(s(D[b]));\n        }\n      }\n\n      d[k].set(w);\n    }\n\n    return this._cachedBlockResults[t] = d, d;\n  }, o.getBuffer = function (t, a) {\n    return this.getSamples(t, a);\n  }, o.getSamples = function (t, a) {\n    for (var e = this.metadata, s = e.numberChannels, r = e.totalBlocks, o = e.totalSamples, i = e.samplesPerBlock, h = Math.max(0, t), n = Math.min(o, t + a), f = Math.max(0, Math.floor(h / i)), l = Math.min(r - 1, Math.floor(n / i)), c = [], u = f; u <= l; u++) {\n      c.push(this._getSamplesAtBlock(u));\n    }\n\n    for (var d = [], p = 0; p < s; p++) {\n      d.push(new Int16Array(n - h));\n    }\n\n    for (var _ = f; _ <= l; _++) {\n      var k = _ - f;\n      if (_ === f && _ === l) for (var m = 0; m < s; m++) {\n        d[m].set(c[k][m].slice(h - f * i, h - f * i + a), 0);\n      } else if (_ === f) for (var D = 0; D < s; D++) {\n        var w = c[k][D].slice(h - f * i);\n        d[D].set(w, 0);\n      } else if (_ === l) for (var C = 0; C < s; C++) {\n        var T = c[k][C].slice(0, n - c[k][C].length - f * i);\n        d[C].set(T, _ * i - h);\n      } else for (var v = 0; v < s; v++) {\n        d[v].set(c[k][v], _ * i - h);\n      }\n    }\n\n    return d;\n  }, r;\n}();\n\n//# sourceURL=webpack:///./node_modules/brstm/dist/brstm.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n( false ? undefined : _typeof(module)) === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/browserCapabilities.js":
/*!************************************!*\
  !*** ./src/browserCapabilities.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nmodule.exports = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var capabilities, ctx, b, blob, u, resp, body, reader, d;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          capabilities = {\n            sampleRate: false,\n            streaming: false\n          }; // Evaluate webaudio\n\n          try {\n            ctx = new (window.AudioContext || window.webkitAudioContext)({\n              sampleRate: 8000\n            });\n            capabilities.sampleRate = ctx.sampleRate === 8000;\n            ctx.close().then(function () {\n              return console.log(\"Closed capability detection audio context.\");\n            });\n          } catch (e) {\n            console.log(\"WebAudio sample rate capability detection failed. Assuming fallback.\");\n          } // Evaluate streaming\n\n\n          _context.prev = 2;\n          b = new Uint8Array(Math.pow(2, 16));\n          blob = new Blob([b], {\n            type: \"application/octet-stream\"\n          });\n          u = URL.createObjectURL(blob);\n          _context.next = 8;\n          return fetch(u);\n\n        case 8:\n          resp = _context.sent;\n          _context.next = 11;\n          return resp.body;\n\n        case 11:\n          body = _context.sent;\n          reader = body.getReader();\n\n        case 13:\n          if (false) {}\n\n          _context.next = 16;\n          return reader.read();\n\n        case 16:\n          d = _context.sent;\n\n          if (!d.done) {\n            _context.next = 19;\n            break;\n          }\n\n          return _context.abrupt(\"break\", 21);\n\n        case 19:\n          _context.next = 13;\n          break;\n\n        case 21:\n          capabilities.streaming = true;\n          _context.next = 27;\n          break;\n\n        case 24:\n          _context.prev = 24;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(\"Streaming capability detection failed. Assuming fallback.\");\n\n        case 27:\n          return _context.abrupt(\"return\", capabilities);\n\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 24]]);\n}));\n\n//# sourceURL=webpack:///./src/browserCapabilities.js?");

/***/ }),

/***/ "./src/configProvider.js":
/*!*******************************!*\
  !*** ./src/configProvider.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports.STREAMING_MIN_RESPONSE = Math.pow(2, 19);\n\n//# sourceURL=webpack:///./src/configProvider.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// This script shouldn't do anything without explicit user interaction (Triggering playback)\n__webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nvar browserCapabilities = __webpack_require__(/*! ./browserCapabilities */ \"./src/browserCapabilities.js\");\n\nvar unlock = __webpack_require__(/*! ./webAudioUnlock */ \"./src/webAudioUnlock.js\");\n\nvar libbrstm = __webpack_require__(/*! brstm */ \"./node_modules/brstm/dist/brstm.js\");\n\nvar _require = __webpack_require__(/*! ./configProvider */ \"./src/configProvider.js\"),\n    STREAMING_MIN_RESPONSE = _require.STREAMING_MIN_RESPONSE;\n\nvar hasInitialized = false;\nvar capabilities = null;\nvar audioContext = null;\nvar scriptNode = null;\nvar gainNode = null;\nvar fullyLoaded = true;\nvar loadState = 0;\nvar playbackCurrentSample = 0;\nvar brstm = null;\nvar brstmBuffer = null;\n\nfunction loadSongLegacy(_x) {\n  return _loadSongLegacy.apply(this, arguments);\n}\n\nfunction _loadSongLegacy() {\n  _loadSongLegacy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(url) {\n    var resp, body;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(url);\n\n          case 2:\n            resp = _context3.sent;\n            _context3.next = 5;\n            return resp.arrayBuffer();\n\n          case 5:\n            body = _context3.sent;\n            brstm = new libbrstm.Brstm(body);\n            console.log(brstm._getMetadata());\n            fullyLoaded = true;\n            loadState = Number.MAX_SAFE_INTEGER;\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _loadSongLegacy.apply(this, arguments);\n}\n\nfunction loadSongStreaming(url) {\n  return new Promise( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var resp, reader, bufferView, writeOffset, resolved, brstmHeaderSize, d, endian, bom;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              resp = _context.sent;\n              _context.next = 5;\n              return resp.body;\n\n            case 5:\n              reader = _context.sent.getReader();\n              brstmBuffer = new ArrayBuffer(parseInt(resp.headers.get(\"content-length\")));\n              bufferView = new Uint8Array(brstmBuffer);\n              writeOffset = 0;\n              resolved = false;\n              brstmHeaderSize = 0;\n              fullyLoaded = false;\n\n            case 12:\n              if (false) {}\n\n              _context.next = 15;\n              return reader.read();\n\n            case 15:\n              d = _context.sent;\n\n              if (d.done) {\n                _context.next = 24;\n                break;\n              }\n\n              bufferView.set(d.value, writeOffset);\n              writeOffset += d.value.length;\n              loadState = writeOffset; // Read the file's header size from the file before passing the file to the BRSTM reader.\n\n              if (brstmHeaderSize == 0 && writeOffset > 0x80) {\n                // Byte order. 0 = LE, 1 = BE.\n                endian = 0; // Read byte order mark. 0x04\n\n                bom = bufferView[0x04] * 256 + bufferView[0x05];\n\n                if (bom == 0xFEFF) {\n                  endian = 1;\n                } // Read the audio offset. 0x70\n\n\n                if (endian == 1) {\n                  brstmHeaderSize = bufferView[0x70] * 16777216 + bufferView[0x71] * 65536 + bufferView[0x72] * 256 + bufferView[0x73];\n                } else {\n                  brstmHeaderSize = bufferView[0x70] + bufferView[0x71] * 256 + bufferView[0x72] * 65536 + bufferView[0x73] * 16777216;\n                } // If the offset in the file turned out to be 0 for some reason or seems to small,\n                // then fall back to the default minimum size, though the file is very likely to be invalid in this case.\n\n\n                if (brstmHeaderSize < 0x90) {\n                  brstmHeaderSize = STREAMING_MIN_RESPONSE;\n                } // Require 64 more bytes just to be safe.\n\n\n                brstmHeaderSize += 64;\n                console.log('WO ' + writeOffset + '. LE ' + endian + '. File header size is ' + brstmHeaderSize + ' bytes'); //DEBUG\n              }\n\n              if (!resolved && brstmHeaderSize != 0 && writeOffset > brstmHeaderSize) {\n                console.log('Creating brstm object with ' + writeOffset + ' bytes of data'); //DEBUG\n\n                brstm = new libbrstm.Brstm(brstmBuffer);\n                resolve();\n                resolved = true;\n              }\n\n              _context.next = 27;\n              break;\n\n            case 24:\n              if (!resolved) {\n                console.log('Creating brstm object with all data'); //DEBUG\n\n                brstm = new libbrstm.Brstm(brstmBuffer);\n                resolve();\n                resolved = true;\n              }\n\n              fullyLoaded = true;\n              return _context.abrupt(\"break\", 29);\n\n            case 27:\n              _context.next = 12;\n              break;\n\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nfunction startPlaying(_x4) {\n  return _startPlaying.apply(this, arguments);\n}\n\nfunction _startPlaying() {\n  _startPlaying = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(url) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (hasInitialized) {\n              _context4.next = 7;\n              break;\n            }\n\n            _context4.next = 3;\n            return browserCapabilities();\n\n          case 3:\n            capabilities = _context4.sent;\n            audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            _context4.next = 7;\n            return unlock(audioContext);\n\n          case 7:\n            if (!fullyLoaded) {\n              _context4.next = 10;\n              break;\n            }\n\n            _context4.next = 10;\n            return (capabilities.streaming ? loadSongStreaming : loadSongLegacy)(url);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _startPlaying.apply(this, arguments);\n}\n\nwindow[\"initializePlayer\"] = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(url) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // Check browser capabilities\n            console.time(\"capability\");\n            _context2.t0 = console;\n            _context2.next = 4;\n            return browserCapabilities();\n\n          case 4:\n            _context2.t1 = _context2.sent;\n\n            _context2.t0.log.call(_context2.t0, _context2.t1);\n\n            console.timeEnd(\"capability\");\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nwindow.player = {\n  play: startPlaying\n};\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/webAudioUnlock.js":
/*!*******************************!*\
  !*** ./src/webAudioUnlock.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (ac) {\n  return new Promise(function (resolve) {\n    var unlockWrapper = document.createElement(\"div\");\n    unlockWrapper.style = \"background: #888a; z-index: 88888; position: fixed; top: 0; bottom: 0; left: 0; right: 0; display: flex; align-items: center; justify-content: center;\";\n    var unlockPrompt = document.createElement(\"div\");\n    unlockPrompt.style = \"display: flex; align-items: center; justify-content: center; flex-direction: column\";\n    unlockPrompt.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.0\\\"  width=\\\"200\\\" height=\\\"200\\\" viewBox=\\\"0 0 75 75\\\">\\n<path d=\\\"M39.389,13.769 L22.235,28.606 L6,28.606 L6,47.699 L21.989,47.699 L39.389,62.75 L39.389,13.769z\\\"\\nstyle=\\\"stroke:#fff;stroke-width:5;stroke-linejoin:round;fill:#fff;\\\"\\n/>\\n<path d=\\\"M48,27.6a19.5,19.5 0 0 1 0,21.4M55.1,20.5a30,30 0 0 1 0,35.6M61.6,14a38.8,38.8 0 0 1 0,48.6\\\" style=\\\"fill:none;stroke:#fff;stroke-width:5;stroke-linecap:round\\\"/>\\n</svg><h1 style=\\\"font-family: sans-serif; color: white; margin: 0;\\\">Tap or click anywhere to enable audio.</h1>\";\n    unlockWrapper.appendChild(unlockPrompt);\n    document.body.appendChild(unlockWrapper);\n    unlockWrapper.addEventListener(\"touchend\", function () {\n      ac.resume();\n\n      if (ac.state === \"running\") {\n        resolve();\n        unlockWrapper.remove();\n      }\n    });\n    unlockWrapper.addEventListener(\"click\", function () {\n      ac.resume();\n\n      if (ac.state === \"running\") {\n        resolve();\n        unlockWrapper.remove();\n      }\n    });\n\n    if (ac.state === \"running\") {\n      resolve();\n      unlockWrapper.remove();\n    }\n  });\n};\n\n//# sourceURL=webpack:///./src/webAudioUnlock.js?");

/***/ })

/******/ });